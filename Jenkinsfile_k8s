pipeline {
  agent {
    kubernetes {
      yamlFile 'ci-pod-template.yml'
    }
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    timeout(time: 1, unit: 'HOURS')
    timestamps()
  }

  environment {
    TF_VAR_datadog_api_key          = credentials('datadog-api-key')
    TF_VAR_datadog_app_key          = credentials('datadog-app-key')
    TF_BACKEND_CONTAINER_NAME       = 'tfstatedatadog'
    TF_BACKEND_CONTAINER_FILE       = 'master-terraform.tfstate' // Keep master
    TF_BACKEND_STORAGE_ACCOUNT_NAME = 'prodtfstatedatadog'
    TF_BACKEND_STORAGE_ACCOUNT_KEY  = credentials('terraform-datadog-azure-backend-account-key')
    TF_INPUT                        = false
    TF_IN_AUTOMATION                = true
    PLAN                            = 'terraform-plan.out'
  }

  stages {
    stage('Terraform') {
      parallel {
        stage('Production') {
          stages {
            stage('Plan') {
              steps {
                sh '''
                make init
                make plan
                '''
              }
            }
            stage('Apply') {
              when {
                branch 'main'
              }
              steps {
                sh 'make apply'
              }
            }
          }
        }
        stage('UpdateCLI') {
          environment {
            UPDATECLI_GITHUB_TOKEN = credentials('updatecli-github-token')
          }
          stages {
            stage('UpdateCLI - Diff') {
              steps {
                updatecli(action: 'diff')
              }
            }
            stage('UpdateCLI - Apply') {
              when {
                branch 'main'
              }
              steps {
                updatecli(action: 'apply', cronTriggerExpression: '@daily')
              }
            }
          }
        }
      }
    }
  }
}
